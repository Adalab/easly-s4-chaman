{"version":3,"sources":["icons/cloud.svg","icons/snow.svg","icons/sun.svg","icons/compass.png","icons/accenture.png","icons/rain.svg","icons/wind.svg","icons/thermometer.svg","icons/cloudIcon.svg","icons/time.svg","images/sun.png","images/night.png","images/snow.png","images/rain.png","components/Sentence/index.js","components/Degrees/index.js","components/MaxMinTemperature/index.js","components/MainInfo/index.js","components/PlusInfo/index.js","components/Daily/index.js","components/CurrentHour/index.js","components/HourHeader/index.js","components/CityLocation/index.js","components/DayNameNumber/index.js","components/Header/index.js","components/Footer/index.js","components/WeekDay/index.js","components/WeekDetail/index.js","components/arrayQuotes/index.js","components/HourData/index.js","components/HeadBoard/index.js","components/DailyDetail/index.js","components/data/bg.js","services/apiServices.js","components/Error/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Sentence","quote","this","props","react_default","a","createElement","className","Component","Degree","temp","Math","round","MaxMinTemperature","_this$props","temp_min","temp_max","MainInfo","mainData","_this$props$mainData","components_Degrees","components_Sentence","components_MaxMinTemperature","PlusInfo","windData","humidity","pressure","speed","concat","Daily","dataWeather","components_MainInfo","main","components_PlusInfo","wind","CurrentHour","lib_default","format","ticking","interval","HourHeader","components_CurrentHour","customStyles","dropdownIndicator","display","indicatorSeparator","CityLocation","inputValue","Promise","resolve","reject","fetch","then","res","json","data","geonames","cities","map","city","value","name","label","adminCodes1","ISO3166_2","countryCode","codeCountry","catch","error","console","log","onChangeCity","getCurrentLocation","selectedLocation","src","compass","alt","onClick","Async_default","styles","arrowRenderer","onChange","country","placeholder","escapeClearsValue","captureMenuScroll","autoFocus","loadOptions","getAsyncOptions","classNamePrefix","theme","Object","objectSpread","borderRadius","colors","primary25","primary","neutral0","neutral80","neutral50","DayNameNumber","date","React","Header","textInput","focusInput","currentLocation","components_CityLocation","components_HourHeader","components_DayNameNumber","Footer","target","href","accenture","Weekday","icon","iconEl","day","weather","Sun","Cloud","Rain","Snow","dt_txt","dayNumb","Date","getDay","weekday","Array","weekName","onDayClick","activeDay","iconTmp","backgroundImage","showIcon","dt","getDateOfWeek","style","maxTmp","minTmp","WeekDetail","forecastData","animation","components_WeekDay","key","quotes","HourData","min","max","floor","random","roundTemp","roundWind","toFixed","onlyTimewithoutseconds","hour","split","rain","HeadBoard","Time","Temp","CloudIcon","Wind","DailyDetail","objDate","Moment","todayInfo","length","paintDate","components_HeadBoard","result","components_HourData","description","themeWeather","sun","night","snow","ApiServices","currentDayService","url","forecastService","locationService","country_code","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","endpointCurrent","endpointForecast","weekForecast","loadedCurrent","loadedForecast","quoteTxt","forecastInf","animationDetail","selectedDay","printDayNameNumber","bind","assertThisInitialized","createRef","focusTextInput","paintDayDetail","defaultDetailInfo","_this2","setState","currentDayData","randomQuote","fetchGetLocation","b","c","d","includes","_this3","loaded","changeBackground","sys","sunrise","sunset","changeAnimation","changeAnimationDetail","_this4","myList","list","item","formattedDate","slice","grouped","groupDateBy","weekList","forEach","single","push","keyGetter","listFromDate","Map","collection","get","set","arrayQuotes","currentDate","weekNumber","getDate","current","focus","e","newCurrentLocation","_this5","defaultInfo","daySelected","index","indexOf","secondIndex","_this$state","BgImage","components_Header","components_Daily","components_WeekDetail","components_DailyDetail","components_Footer","ReactDOM","render","HashRouter","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.334a3548.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.ce11979a.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.d2f64c0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.607ad0a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/compass.0b564c8a.png\";","module.exports = __webpack_public_path__ + \"static/media/accenture.0556492e.png\";","module.exports = __webpack_public_path__ + \"static/media/rain.d7f4ba85.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.bf589f9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.5a6bfd2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudIcon.0d7cf762.svg\";","module.exports = __webpack_public_path__ + \"static/media/time.67d787a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.a1309ba2.png\";","module.exports = __webpack_public_path__ + \"static/media/night.a46c62eb.png\";","module.exports = __webpack_public_path__ + \"static/media/snow.66be4bc3.png\";","module.exports = __webpack_public_path__ + \"static/media/rain.102d717a.png\";","import React, { Component } from 'react';\n//import icon from'../../icons/iconfinder-icon.svg'\nimport './Sentence.scss'\n\nclass Sentence extends Component {\n    render() {\n        const { quote } = this.props;\n\n        return (\n            <div className='container__sentence'>\n                {quote}</div>\n        );\n    }\n}\n\nexport default Sentence;\n","import React, { Component } from \"react\";\nimport \"./Degrees.scss\";\nimport PropTypes from \"prop-types\";\n\nclass Degree extends Component {\n    render() {\n        const { temp } = this.props\n        return <div className='container__Degree'> {Math.round(temp)}\n            <span className='unit'>°</span></div>;\n    }\n}\n\nDegree.propTypes = {\n    temp: PropTypes.number\n};\n\nexport default Degree;\n","import React, { Component } from \"react\";\nimport \"./MaxMinTemperature.scss\";\n\nclass MaxMinTemperature extends Component {\n    render() {\n        const { temp_min, temp_max } = this.props;\n        return (\n            <div className=\"container__maxMinTemperature\">\n                <div className=\"minTemperature\">\n                    min {Math.round(temp_min)}\n                    <span className=\"unit\">°C</span>\n                </div>\n                <div className=\"maxTemperature\">\n                    max {Math.round(temp_max)}\n                    <span className=\"unit\">°C</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MaxMinTemperature;\n","import React, { Component } from \"react\";\nimport Sentence from \"../Sentence\";\nimport Degrees from \"../Degrees\";\nimport MaxMinTemperature from \"../MaxMinTemperature\";\nimport \"./MainInfo.scss\";\n\nclass MainInfo extends Component {\n    render() {\n        const { quote } = this.props;\n        if (this.props.mainData) {\n            const { temp, temp_min, temp_max } = this.props.mainData;\n            return (\n                <div className=\"container__mainInfo-daily\">\n                    <Degrees temp={temp} />\n                    <Sentence quote={quote} />\n                    <MaxMinTemperature\n                        temp_min={temp_min}\n                        temp_max={temp_max}\n                    />\n                </div>\n            );\n        } else {\n            return false;\n        }\n    }\n}\n\nexport default MainInfo;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./PlusInfo.scss\";\n\nclass PlusInfo extends Component {\n    render() {\n        if (this.props.mainData && this.props.windData) {\n            const { humidity, pressure } = this.props.mainData;\n            const { speed } = this.props.windData;\n            return (\n                <div className=\"container__plusInfo-daily\">\n                    <div className=\"plusInfo-humidity\">\n                        <p className=\"plusInfo-humidity-title plus\">\n                            {\" \"}\n                            Humidity\n                        </p>\n                        <p className=\"plusInfo-humidity-data data\">\n                            {\" \"}\n                            {humidity ? `${humidity} %` : \"---\"}\n                        </p>\n                    </div>\n                    <div className=\"plusInfo-wind\">\n                        <p className=\"plusInfo-wind-title plus\"> Wind</p>\n                        <p className=\"plusInfo-wind-data data\">\n                            {\" \"}\n                            {speed ? `${speed} Km/h` : \"---\"}\n                        </p>\n                    </div>\n                    <div className=\"plusInfo-pressure\">\n                        <p className=\"plusInfo-pressure-title plus\">\n                            {\" \"}\n                            Pressure\n                        </p>\n                        <p className=\"plusInfo-pressure-data data\">\n                            {\" \"}\n                            {pressure ? `${pressure} hPa` : \"---\"}\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            return false;\n        }\n    }\n}\n\nPlusInfo.propTypes = {\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    pressure: PropTypes.number\n};\n\nexport default PlusInfo;\n","import React, { Component } from \"react\";\nimport MainInfo from \"../MainInfo\";\nimport PlusInfo from \"../PlusInfo\";\nimport \"./Daily.scss\";\n\nclass Daily extends Component {\n    render() {\n        const { dataWeather, quote } = this.props;\n\n\n        if (dataWeather) {\n            return (\n                <div className=\"container__daily\">\n                    <MainInfo mainData={dataWeather.main} quote={quote} />\n                    <PlusInfo\n                        mainData={dataWeather.main}\n                        windData={dataWeather.wind}\n                    />\n                </div>\n            );\n        } else {\n            return false;\n        }\n    }\n}\n\nexport default Daily;\n","import React, { Component } from 'react';\nimport './CurrentHour.scss';\nimport Clock from 'react-live-clock';\n\n\nclass CurrentHour extends Component {\n    render() {\n        return (\n            <div>\n                <Clock className=\"clock\" format=\"HH:mm\" ticking={true} interval={1000} />\n            </div>\n        );\n    }\n}\n\nexport default CurrentHour;\n","import React, { Component } from 'react';\nimport './HourHeader.scss';\nimport Clock from '../CurrentHour/index';\n\n\nclass HourHeader extends Component {\n    render() {\n        return (\n            <div className=\"hour-header-container\">\n                <Clock />\n            </div>\n        );\n    }\n}\n\nexport default HourHeader;\n","import React, { Component } from \"react\";\nimport \"./CityLocation.scss\";\nimport AsyncSelect from \"react-select/lib/Async\";\nimport compass from \"../../icons/compass.png\";\n\n\nconst customStyles = {\n    dropdownIndicator: ()=>({display:'none'}),\n    indicatorSeparator:()=>({display:'none'})\n  }\n\nclass CityLocation extends Component {\n    getAsyncOptions(inputValue) {\n        return new Promise((resolve, reject) => {\n            fetch(\n                `http://api.geonames.org/searchJSON?q=${inputValue}&maxRows=10&fuzzy=0.8&username=chaman`\n            )\n                .then(res => res.json())\n                .then(data => data.geonames)\n                .then(cities =>\n                    cities.map(city => {\n                        return {\n                            value: city.name ? city.name : false,\n                            label: `${city.name ? city.name : false}  ${\n                                city.adminCodes1.ISO3166_2\n                                    ? city.adminCodes1.ISO3166_2\n                                    : false\n                            } ${city.countryCode ? city.countryCode : false} `,\n                            codeCountry: city.countryCode\n                                ? city.countryCode\n                                : false\n                        };\n                    })\n                )\n                .then(data => resolve(data))\n                .catch(error => console.log(error));\n        });\n    }\n\n    render() {\n        const {\n            onChangeCity,\n            getCurrentLocation,\n            selectedLocation\n        } = this.props;\n        console.log(\"selected\", selectedLocation);\n        return (\n            <div className=\"citylocation\">\n                <img\n                    className=\"location-icon\"\n                    src={compass}\n                    alt=\"compass\"\n                    onClick={getCurrentLocation}\n                />\n                <AsyncSelect\n                 styles={customStyles}\n                    arrowRenderer={()=>null}\n                    onChange={onChangeCity}\n                    value={`${selectedLocation.city} ${\n                        selectedLocation.country\n                    } `}\n                    placeholder={`${selectedLocation.city} ${\n                        selectedLocation.country\n                    } `}\n                    escapeClearsValue={true}\n                    captureMenuScroll={true}\n                    autoFocus\n                    name=\"search\"\n                    loadOptions={this.getAsyncOptions}\n                    className=\"react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    theme={theme => ({\n                        ...theme,\n                        borderRadius: 0,\n\n                        colors: {\n                            ...theme.colors,\n                            primary25: \"#F7F5F4\", //selected in list\n                            primary: \"transparent\", //border box\n                            neutral0: \"transparent\", //color background\n                            neutral80: \"white\", //cursor\n                            neutral50: \"white\" //text inside\n                        }\n                    })}\n                />\n            </div>\n        );\n    }\n}\n\nexport default CityLocation;\n","import React from 'react';\nimport './DayNameNumber.scss';\n\nclass DayNameNumber extends React.Component {\n    render() {\n        return(\n            <p className=\"date-header\">{this.props.date}</p>\n        )\n    }\n}\n\nexport default DayNameNumber;\n","import React, { Component } from 'react';\nimport './Header.scss';\nimport HourHeader from '../HourHeader/index';\nimport CityLocation from '../CityLocation/index';\nimport DayNameNumber from '../DayNameNumber';\n\nclass Header extends Component {\n    render() {\n    const {date, textInput, focusInput, onChangeCity, currentLocation, getCurrentLocation, selectedLocation} = this.props;\n    console.log('header', this.props);\n        return (\n\n            <div className=\"header-main\">\n                <CityLocation\n                selectedLocation={selectedLocation}\n                getCurrentLocation={getCurrentLocation}\n                currentLocation={currentLocation}\n                onChangeCity={onChangeCity}\n                textInput = {textInput}\n                focusInput = {focusInput}\n                />\n                <HourHeader/>\n                <DayNameNumber date={date} />\n\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './Footer.scss';\nimport accenture from '../../icons/accenture.png'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <a target=\"blank\" href=\"https://www.accenture.com/es-es/service-liquid-squad-accenture-digital\">\n                    <img className=\"logo-footer\" src={accenture}\n                        alt=\"logo-accenture\" />\n                </a>\n\n                <a className=\"copy-link\" target=\"blank\" href=\"https://www.iconfinder.com/Neolau1119\"><small className=\"copyright-footer\">© Yun Liu</small></a>\n\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './WeekDay.scss';\nimport Cloud from '../../icons/cloud.svg';\nimport Snow from '../../icons/snow.svg';\nimport Sun from '../../icons/sun.svg';\nimport Rain from '../../icons/rain.svg';\n\n\n\nclass Weekday extends Component {\n    showIcon() {\n        const iconEl = this.props.day.weather[0].main;\n        let icon;\n        if (iconEl === 'Clear') {\n            icon = Sun;\n        } else if (iconEl === 'Clouds') {\n            icon = Cloud;\n        } else if (iconEl === 'Rain') {\n            icon = Rain;\n        } else if (iconEl === 'Snow') {\n            icon = Snow;\n        }\n        console.log(icon);\n        return icon;\n    }\n\n    getDateOfWeek() {\n        const date = this.props.day.dt_txt;\n        const completeDate = new Date(date);\n\n        const dayNumb = completeDate.getDay();\n        const weekday = new Array(7);\n        weekday[0] = \"Sun\";\n        weekday[1] = \"Mon\";\n        weekday[2] = \"Tue\";\n        weekday[3] = \"Wed\";\n        weekday[4] = \"Thu\";\n        weekday[5] = \"Fri\";\n        weekday[6] = \"Sat\";\n        const weekName = weekday[dayNumb];\n\n        console.log(weekName)\n        return weekName;\n\n    }\n\n    render() {\n        const { day, onDayClick, activeDay } = this.props;\n\n        const iconTmp = {\n            backgroundImage: `url(${this.showIcon()})`\n        };\n\n        console.log(day);\n        console.log(activeDay);\n\n        return (\n\n            <div className={`week-detail ${activeDay.dt === day.dt ? 'current_weekday' : ''}`} onClick={() => onDayClick(day)}>\n                <h3 className='weekday'>{this.getDateOfWeek()}</h3>\n                <div className='icon-temp' style={iconTmp}></div>\n                <p className='temp-high'>{day.maxTmp}ºC</p>\n                <p className='temp-low'>{day.minTmp}ºC</p>\n            </div>\n\n        );\n    }\n}\n\nexport default Weekday;\n","import React, { Component } from 'react';\nimport './WeekDetail.scss';\nimport WeekDay from '../WeekDay';\nimport Cloud from '../../icons/cloud.svg';\nimport Snow from '../../icons/snow.svg';\nimport Sun from '../../icons/sun.svg';\nimport '../DailyDetail/DailyDetail.scss';\n\nclass WeekDetail extends Component {\n\n    render() {\n        const { forecastData, onDayClick, activeDay, animation } = this.props;\n\n\n        return (\n            <div className={`weekDetail-container ${animation}`}>\n                {\n                    forecastData.map(day => (\n                        <WeekDay day={day} key={day.dt} activeDay={activeDay} onDayClick={onDayClick} />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeekDetail;\n","\nconst quotes = ['Whatever the weather is, enjoy!', 'No matter what the weather, always bring your own sunshine', 'There is no such thing as bad weather, only different kinds of good weather.'];\n\nexport default quotes;\n","import React from 'react';\nimport './HourData.scss';\n\nclass HourData extends React.Component {\n    getRndInteger(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    render() {\n        const {temp} = this.props;\n        const roundTemp = Math.round(temp);\n        const {wind} = this.props;\n        const roundWind = wind.toFixed(1);\n        const {hour} = this.props;\n        const onlyTime = hour.split (' ');\n        const onlyTimewithoutseconds = onlyTime[1].split(':');\n        return (\n            <tr className=\"table__row\">\n                <th className='HourData__hour'>{onlyTimewithoutseconds[0] + ':' + onlyTimewithoutseconds[1]}</th>\n                <th>{roundTemp}º</th>\n                <th>{this.props.rain} {/* <span className='dailyDetail_units'>mm</span> */}</th>\n                <th>{roundWind} <span className='dailyDetail_units'>km/h</span></th>\n            </tr>\n        )\n    }\n}\n\nexport default HourData;\n","import React from 'react';\nimport Wind from '../../icons/wind.svg';\nimport Temp from '../../icons/thermometer.svg';\nimport CloudIcon from '../../icons/cloudIcon.svg';\nimport Time from '../../icons/time.svg';\nimport './HeadBoard.scss';\n\nclass HeadBoard extends React.Component {\n    render() {\n        return (\n            <thead>\n                <tr className='headBoard__general'>\n                    <th>\n                        <img className='headBoard__icon' src={Time} alt='time icons' />\n                    </th>\n                    <th>\n                        <img className='headBoard__icon' src={Temp} alt='temperature icon' />\n                    </th>\n                    <th>\n                        <img className='headBoard__icon' src={CloudIcon} alt='Rain percent' />\n                    </th>\n                    <th>\n                        <img className='headBoard__icon' src={Wind} alt='Wind speed' />\n                    </th>\n                </tr>\n            </thead>\n        )\n    }\n}\n\nexport default HeadBoard;\n","import React from 'react';\nimport HourData from '../HourData';\nimport HeadBoard from '../HeadBoard';\nimport Moment from 'moment';\nimport './DailyDetail.scss';\n\n\n\n\nclass DailyDetail extends React.Component {\n\n    paintDate(){\n        let objDate = new Date(this.props.activeDay.dt_txt);\n        let d = Moment(objDate);\n        return d.format('ddd MMM DD YYYY');\n    }\n\n    render() {\n        const {todayInfo, animation} = this.props;\n\n        if(todayInfo.length === 0) {\n            return(\n                <p>Buscando resultados</p>\n            )\n        } else {\n        return (\n            <div className={`infoDaily-Detail ${animation}`}>\n                <h3 className='title-detail'>Detailed information:<span className='table_title-day'> {this.paintDate()}</span></h3>\n                <table className=\"dailyDetail__table\">\n                    <HeadBoard />\n                    <tbody>\n                         {todayInfo.map((result, key) => {\n\n                            return(\n                               <HourData key={key} hour={result.dt_txt} wind={result.wind.speed}\n                               temp={result.main.temp} rain={result.weather[0].description}/>\n                            )\n\n\n                        })}\n\n                    </tbody>\n                </table>\n            </div>\n\n\n\n        )\n    }}\n}\n\nexport default DailyDetail;\n\n\n\n\n","\nimport sun from '../../images/sun.png';\nimport night from '../../images/night.png';\nimport snow from '../../images/snow.png';\nimport rain from '../../images/rain.png';\n\nconst themeWeather = {\n    sun,\n    night,\n    snow,\n    rain\n}\n\nexport { themeWeather };\n","export default class ApiServices {\n\n    static currentDayService = (city, country) => {\n        const url = `http://api.openweathermap.org/data/2.5/weather?APPID=e0911626bb8e9d069605aa705cac6693&q=${city}${country}&units=metric&lang=en`;\n        return fetch(url).then(res => res.json());\n    }\n\n    static forecastService = (city, country) => {\n        const url = `http://api.openweathermap.org/data/2.5/forecast?APPID=e0911626bb8e9d069605aa705cac6693&q=${city}${country}&units=metric&lang=es`;\n        return fetch(url).then(res => res.json());\n    }\n\n    static locationService = () => {\n        const urlLocation ='http://api.ipstack.com/62.82.24.195?access_key=80740194e65202f38b81670ff01f10ef';\n        return fetch(urlLocation).then(res => res.json())\n        .then(data=>data = {city: data.city, country:data.country_code?`,${data.country_code}`:false})\n    }\n\n}\n","import React from 'react';\nimport './Error.scss';\n\nclass Error extends React.Component {\n    render() {\n        const {message}=this.props\n        return (\n            <div className='error__div'>\n                <h3 className='error__title'>Nobody is perfect:</h3>\n                <p className='error_clasic'>Sorry, but {message}.</p>\n                <p className='error_joke'>You can always go outside to see the weather</p>\n            </div>\n        )\n    }\n}\n\nexport default Error;\n","import React, { Component } from \"react\";\nimport Daily from \"../Daily\";\nimport \"./App.scss\";\nimport Header from \"../Header/index\";\nimport Footer from \"../Footer\";\nimport WeekDetail from \"../WeekDetail\";\nimport arrayQuotes from \"../arrayQuotes\";\nimport DailyDetail from \"../DailyDetail\";\nimport { themeWeather } from \"../data/bg\";\nimport Error from \"../Error\"\nimport ApiServices from \"../../services/apiServices\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            endpointCurrent: {},\n            endpointForecast: [],\n            weekForecast: [],\n            loadedCurrent: true,\n            loadedForecast: true,\n            error:false,\n            quoteTxt: \"\",\n            date: \"\",\n            theme: \"\",\n            activeDay: \"\",\n            selectedLocation: \"\",\n            currentLocation: {},\n            forecastInf: '',\n            todayInfo: '',\n            animation: \"\",\n            animationDetail: \"\",\n            selectedDay: \"\",\n            CurrentHour: \"\"\n        };\n\n        this.printDayNameNumber = this.printDayNameNumber.bind(this);\n        this.textInput = React.createRef();\n        this.focusTextInput = this.focusTextInput.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.getCurrentLocation = this.getCurrentLocation.bind(this);\n        this.onDayClick = this.onDayClick.bind(this);\n        this.paintDayDetail = this.paintDayDetail.bind(this);\n        this.defaultDetailInfo = this.defaultDetailInfo.bind(this);\n    }\n\n    fetchGetLocation() {\n        ApiServices.locationService()\n        .then(data =>\n            this.setState(\n                {\n                    currentLocation: data,\n                    selectedLocation: data\n\n                },\n                () => {\n                    this.currentDayData(data.city, data.country);\n                    this.forecastData(data.city, data.country);\n                }\n            )\n        )\n        .catch(error=>(this.setState({\n            error:error,\n        })));\n    }\n\n    componentDidMount() {\n        this.randomQuote();\n        this.printDayNameNumber();\n        this.fetchGetLocation();\n    }\n\n    changeBackground(a, b, c, d) {\n        if (a < b && a > c) {\n            return themeWeather.night\n        } else {\n            if (d.includes('clear sky', 'few clouds', 'scattered clouds')) {\n                return themeWeather.sun\n            } else if (d.includes('broken clouds', 'shower rain', 'rain', 'thunderstorm', 'drizzle')) {\n                return themeWeather.rain\n            } else if (d.includes('snow')) {\n                return themeWeather.snow\n            } else {\n                return themeWeather.sun\n            }\n\n        }\n    }\n\n    changeAnimation(a, b, c, d) {\n        if (a < b && a > c) {\n            return 'night'\n        } else {\n            if (d.includes('clear sky', 'few clouds', 'scattered clouds')) {\n                return 'sun'\n            } else if (d.includes('broken clouds', 'shower rain', 'rain', 'thunderstorm', 'drizzle')) {\n                return 'rain'\n            } else if (d.includes('snow')) {\n                return 'snow'\n            } else {\n                return 'sun'\n            }\n\n        }\n    }\n\n    changeAnimationDetail(a, b, c, d) {\n        if (a < b && a > c) {\n            return 'night-detail'\n        } else {\n            if (d.includes('clear sky', 'few clouds', 'scattered clouds')) {\n                return 'sun-detail'\n            } else if (d.includes('broken clouds', 'shower rain', 'rain', 'thunderstorm', 'drizzle')) {\n                return 'rain-detail'\n            } else if (d.includes('snow')) {\n                return 'snow-detail'\n            } else {\n                return 'sun-detail'\n            }\n\n        }\n    }\n\n\n    currentDayData(city, country) {\n\n        ApiServices.currentDayService(city, country)\n            .then(data =>\n                this.setState({\n                    endpointCurrent: data,\n                    loaded: true,\n                    theme: this.changeBackground(data.dt, data.sys.sunrise, data.sys.sunset, data.weather[0].description),\n                    animation: this.changeAnimation(data.dt, data.sys.sunrise, data.sys.sunset, data.weather[0].description),\n                    animationDetail: this.changeAnimationDetail(data.dt, data.sys.sunrise, data.sys.sunset, data.weather[0].description)\n                })\n            )\n            .catch(error => this.setState({ error: error }));\n    }\n\n    forecastData(city, country) {\n        ApiServices.forecastService(city, country)\n            .then(data => {\n                this.setState({\n                    forecastInf: data\n                })\n                const myList = data.list.map(item => {\n                    item.formattedDate = item.dt_txt.slice(0, 10);\n                    return item;\n                })\n                this.defaultDetailInfo();\n\n                const grouped = this.groupDateBy(myList, 'formattedDate');\n\n                const weekList = [];\n\n                grouped.forEach(single => {\n                    let minTmp = single[0].main.temp_min;\n                    let maxTmp = single[0].main.temp_max;\n                    single.forEach(item => {\n                        const min = item.main.temp_min;\n                        const max = item.main.temp_max;\n                        if (min < minTmp) {\n                            minTmp = min;\n                        }\n                        if (max > maxTmp) {\n                            maxTmp = max;\n                        }\n                    });\n\n                    single[0].minTmp = Math.round(minTmp);\n                    single[0].maxTmp = Math.round(maxTmp);\n                    weekList.push(single[0]);\n                })\n\n\n                this.setState({\n                    endpointForecast: myList,\n                    weekForecast: weekList,\n                    loaded: true,\n                    activeDay: weekList[0],\n\n                })\n            })\n            .catch(error => this.setState({ error: error }));\n    }\n\n    groupDateBy(list, keyGetter) {\n        const listFromDate = new Map();\n        list.forEach((item) => {\n            const key = item[keyGetter];\n            const collection = listFromDate.get(key);\n            if (!collection) {\n                listFromDate.set(key, [item]);\n            } else {\n                collection.push(item);\n            }\n        });\n        return listFromDate;\n    }\n\n\n\n    randomQuote() {\n        const random =\n            arrayQuotes[Math.floor(Math.random() * arrayQuotes.length)];\n        this.setState({\n            quoteTxt: random\n        });\n    }\n\n    printDayNameNumber() {\n        const currentDate = new Date();\n        const weekNumber = currentDate.getDate();\n        const weekday = new Array(7);\n        weekday[0] = \"Sun\";\n        weekday[1] = \"Mon\";\n        weekday[2] = \"Tue\";\n        weekday[3] = \"Wed\";\n        weekday[4] = \"Thu\";\n        weekday[5] = \"Fri\";\n        weekday[6] = \"Sat\";\n        const weekName = weekday[currentDate.getDay()];\n        this.setState({\n            date: weekName + \" \" + weekNumber\n        });\n    }\n\n    focusTextInput() {\n        this.textInput.current.focus();\n    }\n\n    onChangeCity(e) {\n        if (e) {\n            const newCurrentLocation = {\n                city: e.value,\n                country: `,${e.codeCountry}`\n            };\n            this.currentDayData(e.value, `,${e.codeCountry}`);\n            this.forecastData(e.value, `,${e.codeCountry}`);\n            this.setState({\n                selectedLocation: newCurrentLocation\n            });\n        } else if (!e) {\n            this.currentDayData(\n                `${this.state.currentLocation.city},${\n                    this.state.currentLocation.country\n                }`\n            );\n        } else {\n            return console.log(\"error\");\n        }\n    }\n\n    onDayClick(day) {\n        this.setState({\n            activeDay: day\n        },() => this.paintDayDetail());\n    }\n\n    defaultDetailInfo() {\n        const currentInfo = this.state.forecastInf.list;\n        const defaultInfo = currentInfo.slice(0, 8);\n        this.setState({\n            todayInfo: defaultInfo\n        })\n    }\n\n    paintDayDetail() {\n        const daySelected = this.state.activeDay.dt_txt;\n        const indexSelected = this.state.forecastInf.list.map(item => {\n            const indexdate = item.dt_txt;\n            return indexdate;\n        })\n        const index = indexSelected.indexOf(daySelected);\n        const secondIndex = index + 8;\n        const dailyDetailInfo = this.state.forecastInf.list;\n\n        const todayInfo = dailyDetailInfo.slice(index, secondIndex);\n        this.setState({\n            todayInfo: todayInfo\n        })\n    }\n\n\n    getCurrentLocation() {\n        this.fetchGetLocation();\n        this.onChangeCity();\n    }\n\n\n\n    render() {\n        const {\n            error,\n            endpointCurrent,\n            quoteTxt,\n            date,\n            currentLocation,\n            selectedLocation,\n            weekForecast,\n            activeDay,\n            animation,\n            animationDetail,\n            theme\n        } = this.state;\n\n        const { textInput, focusTextInput } = this.props;\n\n        const BgImage = {\n            backgroundImage: `url(${theme})`\n        };\n\n\n            return (\n                <div className={`App ${animation}`}>\n                    <div className=\"bg-image container-app\">\n                        <div className=\"container-screen\" style={BgImage}>\n\n                            <Header\n                                getCurrentLocation={this.getCurrentLocation}\n                                currentLocation={currentLocation}\n                                selectedLocation={selectedLocation}\n                                date={date}\n                                textInput={textInput}\n                                focusInput={focusTextInput}\n                                onChangeCity={this.onChangeCity}\n                            />\n                            <Daily\n                                dataWeather={endpointCurrent}\n                                quote={quoteTxt}\n\n                            />\n                        </div>\n                        <WeekDetail forecastData={weekForecast} onDayClick={this.onDayClick} activeDay={activeDay} animation={animationDetail}/>\n                        <DailyDetail todayInfo={this.state.todayInfo} activeDay={this.state.activeDay} animation={animationDetail}/>\n\n                        <Footer />\n                    </div>\n                </div>\n            );\n\n\n}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.scss\"\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}